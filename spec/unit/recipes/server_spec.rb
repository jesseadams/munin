require 'spec_helper'
require 'chefspec/server'

describe 'munin::server' do
  let(:chef_run) do
    run = ChefSpec::Runner.new do |node|
      node.set['munin']['server_auth_method'] = 'htpasswd'
    end
    run.converge(described_recipe)
    return run
  end

  before do
    ChefSpec::Server.create_data_bag('users',
      'seth' => { 'htpasswd' => 'abc123' },
      'nathen' => { 'htpasswd' => 'abc123' },
    )
  end

  context 'when the web server is apache' do
    it 'includes the `server_apache`recipe`' do
      # expect(chef_run).to include_recipe('munin::server_apache')
      pending 'This recipe is pretty much untestable'
    end
  end

  context 'when the web server is nginx' do
    it 'includes the `server_nginx`recipe`' do
      # expect(chef_run).to include_recipe('munin::server_nginx')
      pending 'This recipe is pretty much untestable'
    end
  end

  context 'when the web server is bacon' do
    it 'raises an exception' do
      # expect { chef_run }.to raise_error
      pending 'This recipe is pretty much untestable'
    end
  end

  context 'server-parts' do
    it 'creates a server config' do
      expect(chef_run).to render_file('/etc/munin/munin.conf').with_content(/generated by Chef/)
    end
    it 'finds itself as munin-node as fallback' do
      expect(chef_run).to render_file('/etc/munin/munin.conf').with_content(/chefspec.local/)
    end
  end
end
